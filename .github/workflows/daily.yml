name: daily-picks

on:
  schedule:
    # 每天 06:30 Asia/Taipei = 前一天 22:30 UTC
    - cron: "30 22 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash
          rclone version

      # === Google Drive (OAuth) 設定 ===
      # 需要事先在 Repository secrets 放入：
      # - GDRIVE_CLIENT_ID
      # - GDRIVE_CLIENT_SECRET
      # - GDRIVE_TOKEN_JSON   (含 refresh_token 的整段 JSON)
      # 可選：
      # - GDRIVE_ROOT_FOLDER_ID  指定同步的目標資料夾 ID（建議）
      - name: Configure rclone (Google Drive OAuth)
        env:
          GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
          GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}
          GDRIVE_TOKEN_JSON: ${{ secrets.GDRIVE_TOKEN_JSON }}
          GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
        run: |
          set -e
          mkdir -p ~/.config/rclone

          # 檢查必要的環境變數
          if [ -z "${GDRIVE_CLIENT_ID}" ] || [ -z "${GDRIVE_CLIENT_SECRET}" ] || [ -z "${GDRIVE_TOKEN_JSON}" ]; then
            echo "::error::缺少必要的 Google Drive 認證資訊"
            echo "請確認以下 Secrets 已設定："
            echo "- GDRIVE_CLIENT_ID"
            echo "- GDRIVE_CLIENT_SECRET"
            echo "- GDRIVE_TOKEN_JSON"
            exit 1
          fi

          # 建立 rclone 配置檔
          {
            echo "[gdrive]"
            echo "type = drive"
            echo "scope = drive"
            echo "client_id = ${GDRIVE_CLIENT_ID}"
            echo "client_secret = ${GDRIVE_CLIENT_SECRET}"
            echo "token = ${GDRIVE_TOKEN_JSON}"
          } > ~/.config/rclone/rclone.conf

          # 如果有設定 root_folder_id，追加到設定檔
          if [ -n "${GDRIVE_ROOT_FOLDER_ID}" ]; then
            echo "root_folder_id = ${GDRIVE_ROOT_FOLDER_ID}" >> ~/.config/rclone/rclone.conf
            echo "- root_folder_id set" >> $GITHUB_STEP_SUMMARY
          fi

          # 顯示配置檔案（隱藏敏感資訊）
          echo "### rclone remote configured" >> $GITHUB_STEP_SUMMARY
          echo "Config preview (secrets hidden):" >> $GITHUB_STEP_SUMMARY
          grep -v "client_id\|client_secret\|token" ~/.config/rclone/rclone.conf >> $GITHUB_STEP_SUMMARY || true

          # 診斷資訊
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Diagnostic Info" >> $GITHUB_STEP_SUMMARY
          echo "- Config file exists: $(test -f ~/.config/rclone/rclone.conf && echo 'YES' || echo 'NO')" >> $GITHUB_STEP_SUMMARY
          echo "- Config file size: $(wc -c < ~/.config/rclone/rclone.conf) bytes" >> $GITHUB_STEP_SUMMARY
          echo "- Number of lines: $(wc -l < ~/.config/rclone/rclone.conf)" >> $GITHUB_STEP_SUMMARY
          echo "- CLIENT_ID length: ${#GDRIVE_CLIENT_ID}" >> $GITHUB_STEP_SUMMARY
          echo "- CLIENT_SECRET length: ${#GDRIVE_CLIENT_SECRET}" >> $GITHUB_STEP_SUMMARY
          echo "- TOKEN_JSON length: ${#GDRIVE_TOKEN_JSON}" >> $GITHUB_STEP_SUMMARY
          echo "- TOKEN starts with: ${GDRIVE_TOKEN_JSON:0:20}..." >> $GITHUB_STEP_SUMMARY

      # 測試 rclone 配置是否正常
      - name: Test rclone connection
        timeout-minutes: 2
        run: |
          echo "Testing rclone connection to Google Drive..."
          rclone about gdrive: --timeout 30s --contimeout 30s || {
            echo "::warning::rclone connection test failed, but continuing anyway"
            exit 0
          }
          echo "rclone connection OK" >> $GITHUB_STEP_SUMMARY

      # 先把雲端資料同步到 ./data
      - name: Sync data from Google Drive -> ./data
        timeout-minutes: 5
        run: |
          mkdir -p data
          # 使用 --timeout 和 --contimeout 避免卡住
          rclone sync "gdrive:" "./data" \
            -vv \
            --log-file rclone.log \
            --timeout 30s \
            --contimeout 60s \
            --retries 3 \
            --low-level-retries 3 \
            --create-empty-src-dirs || true

      # 執行你的主程式（會讀寫 ./data）
      - name: Run Taiwan stock recommendation bot
        env:
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_USER_ID: ${{ secrets.LINE_USER_ID }}
          # 可選參數（如有需要就在 Secrets 或 Variables 設定）
          # EXTRA_USER_IDS: ${{ secrets.EXTRA_USER_IDS }}
          # TWSE_CODES: "2330,2317,2303,2454,2603,2615,2881,2882,2886,1101"
          # TOP_K: "10"
        run: python main.py

      # 將更新後的資料回寫到雲端
      - name: Sync data back to Google Drive
        timeout-minutes: 5
        continue-on-error: true
        run: |
          # 檢查 ./data 目錄是否有內容
          if [ ! -d "./data" ] || [ -z "$(ls -A ./data)" ]; then
            echo "::warning::./data 目錄為空或不存在，跳過上傳"
            exit 0
          fi

          # 使用 copy 取代 sync，避免刪除雲端現有檔案
          rclone copy "./data" "gdrive:" \
            -vv \
            --log-file rclone.log \
            --timeout 30s \
            --contimeout 60s \
            --retries 3 \
            --low-level-retries 3 \
            --update \
            --checksum || {
              echo "::warning::rclone copy 失敗，但繼續執行"
              exit 0
            }

      # 失敗或成功都上傳 rclone 日誌，方便除錯
      - name: Upload rclone logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rclone-logs
          path: rclone.log
